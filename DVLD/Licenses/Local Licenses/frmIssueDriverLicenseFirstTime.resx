<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        T3X3/82/AHAEaoEE7aq2AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAYRJREFUWEft
        ltGNwyAMhiulg3SUGyWj3CZ9TJslOsoNUaQ+5mTHPwcOYJP25aR8ElJkiG2MbTidDv4T5+n5db4/v4c5
        PIZ7WGT88LiFK83rfz4CGxVj9M2DjE2vC41hDiM5II7xGq1jH6vyVal3d/SPRIUd3AsZ5F3fwlXPmUyv
        i0TN73jGuotl389/8NHsiQSHHTuXc9ZrWqSOIxL5igbRayBn6o0Gji6uR07MYdRrixSNOZ3YGM/ldhR4
        93N4aDljOFEzDkhvbS7CtdzK+ooTlnHC1E24zko54TFOoINqeYa7ZOCEdEjLOOHKA1KmZTWkWhYzYkB6
        ixZnlM63BMKOku35R8szOFONi2Rz5pXE1DQrDOBG03KwMQ4cTriqoJUoVePAcMJVYTUlpnFg/J/Kqui7
        wG0cFJzw7R6QAnUbuo2DpJewrkZelUkajZ7qIeaUp7lteNOJ915EAHd5hyLsulZN/STvOx5rrxijQzKf
        PNd3R62NJGP6/OZ2jAjhqX5w0MkvLkjlQBhPaBAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnIssueLicense.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>